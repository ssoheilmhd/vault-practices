events {
    worker_connections 1024;
}

http {
    # Upstream for Vault
    upstream vault {
        server vault-node:8200;
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name newvault.stdc.local;
        return 301 https://$server_name$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl;
        http2 on;  # Enable HTTP/2 separately
        server_name newvault.stdc.local;

        # SSL certificates - verify these paths match your volume mounts
        ssl_certificate /etc/ssl/certs/vault.crt;
        ssl_certificate_key /etc/ssl/private/vault.key;

        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        # Proxy settings for Vault
        location / {
            proxy_pass http://vault;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Vault specific headers
            proxy_set_header X-Vault-Request true;

            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Buffer settings
            proxy_buffering off;
        }
    }
}
